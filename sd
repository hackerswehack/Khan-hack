var popup = null;
var base_url;
if (typeof document.dev_env != "undefined") {
    base_url = document.dev_env;
} else {
    base_url = "https://raw.githubusercontent.com/ading2210/edpuzzle-answers/main";
}

var manifestData = chrome.runtime.getManifest();
var extensionName = manifestData.name;
var assignmentData = new Object();

function http_get(url, callback, headers = [], method = "GET", content = null) {
    var request = new XMLHttpRequest();
    request.addEventListener("load", callback);
    request.open(method, url, true);

    if (window.__EDPUZZLE_DATA__ && window.__EDPUZZLE_DATA__.token) {
        headers.push(["authorization", window.__EDPUZZLE_DATA__.token]);
    }
    for (const header of headers) {
        request.setRequestHeader(header[0], header[1]);
    }

    request.send(content);
}

function init() {
    if (window.location.hostname == "edpuzzle.hs.vc") {
        alert("To use this, drag this button into your bookmarks bar. Then, run it when you're on an Edpuzzle assignment.");
    } else if ((/https{0,1}:\/\/edpuzzle.com\/assignments\/[a-f0-9]{1,30}\/watch/).test(window.location.href)) {
        getAssignment();
    } else if (window.canvasReadyState) {
        handleCanvasURL();
    } else if (window.schoologyMoreLess) {
        handleSchoologyURL();
    } else {
        alert("Please run this script on an Edpuzzle assignment. The URL should look like this:\nhttps://edpuzzle.com/assignments/{ASSIGNMENT_ID}/watch");
    }
}

// Canvas and Schoology function handling...

function handleCanvasURL() {
    // Same as before
}

function handleSchoologyURL() {
    // Same as before
}

function getAssignment(callback) {
    var assignment_id = window.location.href.split("/")[4];
    if (typeof assignment_id == "undefined") {
        alert("Error: Could not infer the assignment ID. Are you on the correct URL?");
        return;
    }
    var url1 = "https://edpuzzle.com/api/v3/assignments/" + assignment_id;

    http_get(url1, function () {
        var assignment = JSON.parse(this.responseText);
        if (("" + this.status)[0] == "2") {
            openPopup(assignment);
        } else {
            alert(`Error: Status code ${this.status} received when attempting to fetch the assignment data.`);
        }
    });
}

// Popup management...

function openPopup(assignment) {
    // Same as before
}

function getMedia(assignment) {
    // Same as before
}

function parseQuestions(questions) {
    // Same as before
}

// Additionally handle assignment fetching for answers feature
function main() {
    if (window.location.href.includes("/assignments/")) {
        if (document.querySelector("aside")) {
            var assignment = window.location.href.split("https://edpuzzle.com/assignments/").join("").split("/")[0];
            var observer = new MutationObserver((event) => {
                calculate();
            }).observe(document.querySelector("aside"), { attributes: true });

            var iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
            console = iframe.contentWindow.console;
            window.console = console;

            console.log(`[${extensionName}] Successfully initialized.. fetching data`);
            fetchAnswers(assignment);
            checkForHome();
        } else {
            alert(`${extensionName} is currently not enabled, please reload the webpage. If this error persists, Edpuzzle+ is currently broken and will be fixed shortly.`);
        }
    } else {
        console.log(`[${extensionName}] Not on an assignment`);
        checkURL();
    }
}

function calculate() {
    // Same as before
}

function fetchAnswers(assignmentId) {
    // Same as before
}

function checkForHome() {
    // Same as before
}

function checkURL() {
    if (window.location.href.includes("/assignments/")) {
        console.log(`[${extensionName}] Firing main function`);
        setTimeout(main, 1000);
    } else {
        setTimeout(checkURL, 1000);
    }
}

$(document).ready(checkURL);
init();
